import type { IActionHttp, IActorHttpOutput } from '@comunica/bus-http';
import { ActorHttp } from '@comunica/bus-http';
import type { IActorArgs, IActorTest, Mediator } from '@comunica/core';
import { ActionContextKey } from '@comunica/core';
import type { Session } from '@rubensworks/solid-client-authn-isomorphic';
/**
 * A comunica Inrupt Solid Client Authn Http Actor.
 */
export declare class ActorHttpInruptSolidClientAuthn extends ActorHttp {
    static readonly CONTEXT_KEY_SESSION: ActionContextKey<Session>;
    readonly mediatorHttp: Mediator<ActorHttp, IActionHttp, IActorTest, IActorHttpOutput>;
    constructor(args: IActorHttpInruptSolidClientAuthnArgs);
    test(action: IActionHttp): Promise<IActorTest>;
    run(action: IActionHttp): Promise<IActorHttpOutput>;
}
export interface IActorHttpInruptSolidClientAuthnArgs extends IActorArgs<IActionHttp, IActorTest, IActorHttpOutput> {
    mediatorHttp: Mediator<ActorHttp, IActionHttp, IActorTest, IActorHttpOutput>;
}

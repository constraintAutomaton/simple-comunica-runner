{"version":3,"file":"CliArgsHandlerSolidAuth.js","sourceRoot":"","sources":["CliArgsHandlerSolidAuth.ts"],"names":[],"mappings":";;;AAIA,oEAAoE;AACpE,MAAM,EAAE,gBAAgB,EAAE,GAAG,OAAO,CAAC,6BAA6B,CAAC,CAAC;AAEpE;;GAEG;AACH,MAAa,uBAAuB;IAG3B,aAAa,CAAC,gBAA2B;QAC9C,OAAO,gBAAgB;aACpB,OAAO,CAAC;YACP,gBAAgB,EAAE;gBAChB,KAAK,EAAE,KAAK;gBACZ,IAAI,EAAE,QAAQ;gBACd,QAAQ,EAAE,gFAAgF;gBAC1F,OAAO,EAAE,6BAA6B;gBACtC,KAAK,EAAE,sBAAsB;aAC9B;SACF,CAAC,CAAC;IACP,CAAC;IAEM,KAAK,CAAC,UAAU,CAAC,IAAyB,EAAE,OAA4B;QAC7E,IAAI,IAAI,CAAC,gBAAgB,KAAK,MAAM,EAAE,CAAC;YACrC,IAAI,CAAC,OAAO,GAAG,MAAM,gBAAgB,CAAC;gBACpC,UAAU,EAAE,IAAI,CAAC,gBAAgB;aAClC,CAAC,CAAC;YACH,OAAO,CAAC,wDAAwD,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC;QACnF,CAAC;IACH,CAAC;CACF;AAxBD,0DAwBC","sourcesContent":["import type { ICliArgsHandler } from '@comunica/types';\nimport type { Session } from '@rubensworks/solid-client-authn-isomorphic';\nimport type { Argv } from 'yargs';\n\n// eslint-disable-next-line ts/no-require-imports,ts/no-var-requires\nconst { interactiveLogin } = require('solid-node-interactive-auth');\n\n/**\n * Adds and handles CLI options for Solid authentication.\n */\nexport class CliArgsHandlerSolidAuth implements ICliArgsHandler {\n  public session: Session | undefined;\n\n  public populateYargs(argumentsBuilder: Argv<any>): Argv<any> {\n    return argumentsBuilder\n      .options({\n        identityProvider: {\n          alias: 'idp',\n          type: 'string',\n          describe: 'Solid identity provider to authenticate with (set to \\'void\\' to disable auth)',\n          default: 'https://solidcommunity.net/',\n          group: 'Recommended options:',\n        },\n      });\n  }\n\n  public async handleArgs(args: Record<string, any>, context: Record<string, any>): Promise<void> {\n    if (args.identityProvider !== 'void') {\n      this.session = await interactiveLogin({\n        oidcIssuer: args.identityProvider,\n      });\n      context['@comunica/actor-http-inrupt-solid-client-authn:session'] = this.session;\n    }\n  }\n}\n"]}
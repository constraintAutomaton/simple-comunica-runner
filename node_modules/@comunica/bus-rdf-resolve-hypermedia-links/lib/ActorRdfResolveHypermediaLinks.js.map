{"version":3,"file":"ActorRdfResolveHypermediaLinks.js","sourceRoot":"","sources":["ActorRdfResolveHypermediaLinks.ts"],"names":[],"mappings":";;;AACA,yCAAuC;AAGvC;;;;;;;;;;GAUG;AACH,MAAsB,8BACpB,SAAQ,YAA0F;IAClG;;OAEG;IACH,YAAmB,IAAyC;QAC1D,KAAK,CAAC,IAAI,CAAC,CAAC;IACd,CAAC;CACF;AARD,wEAQC","sourcesContent":["import type { IAction, IActorArgs, IActorOutput, IActorTest, Mediate } from '@comunica/core';\nimport { Actor } from '@comunica/core';\nimport type { ILink } from '@comunica/types';\n\n/**\n * A comunica actor for rdf-resolve-hypermedia-links events.\n *\n * Actor types:\n * * Input:  IActionRdfResolveHypermediaLinks:      The metadata from which the links should be extracted.\n * * Test:   <none>\n * * Output: IActorRdfResolveHypermediaLinksOutput: The URLs that were detected.\n *\n * @see IActionRdfResolveHypermediaLinks\n * @see IActorRdfResolveHypermediaLinksOutput\n */\nexport abstract class ActorRdfResolveHypermediaLinks\n  extends Actor<IActionRdfResolveHypermediaLinks, IActorTest, IActorRdfResolveHypermediaLinksOutput> {\n  /**\n   * @param args - @defaultNested {<default_bus> a <cc:components/Bus.jsonld#Bus>} bus\n   */\n  public constructor(args: IActorRdfResolveHypermediaLinksArgs) {\n    super(args);\n  }\n}\n\nexport interface IActionRdfResolveHypermediaLinks extends IAction {\n  /**\n   * The metadata from which the links should be extracted.\n   */\n  metadata: Record<string, any>;\n}\n\nexport interface IActorRdfResolveHypermediaLinksOutput extends IActorOutput {\n  /**\n   * An array of links to follow.\n   */\n  links: ILink[];\n}\n\n// TODO remove this in next major version\nexport { ILink } from '@comunica/types';\n\nexport type IActorRdfResolveHypermediaLinksArgs = IActorArgs<\nIActionRdfResolveHypermediaLinks,\nIActorTest,\nIActorRdfResolveHypermediaLinksOutput\n>;\n\nexport type MediatorRdfResolveHypermediaLinks = Mediate<\nIActionRdfResolveHypermediaLinks,\nIActorRdfResolveHypermediaLinksOutput\n>;\n"]}